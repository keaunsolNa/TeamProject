-- DROP TABLE 
DROP TABLE TBL_MEMBER_DEAD CASCADE CONSTRAINTS;
DROP TABLE TBL_CLASS CASCADE CONSTRAINTS;
DROP TABLE TBL_TEACHER_RESUME CASCADE CONSTRAINTS;
DROP TABLE TBL_TEACHER CASCADE CONSTRAINTS;
DROP TABLE TBL_CENTER_MANAGEMENT CASCADE CONSTRAINTS;
DROP TABLE TBL_CENTER_KINDS CASCADE CONSTRAINTS;
DROP TABLE TBL_MANAGER CASCADE CONSTRAINTS;
DROP TABLE TBL_MEMBER_ALIVE CASCADE CONSTRAINTS;
DROP TABLE TBL_MEMBER_QUESTION CASCADE CONSTRAINTS;
DROP TABLE TBL_CLASS_PAYMENT CASCADE CONSTRAINTS;
DROP TABLE TBL_CLASS_MEMBER CASCADE CONSTRAINTS;
DROP TABLE TBL_RENT_REQUEST CASCADE CONSTRAINTS;
DROP TABLE TBL_POST_NOTICE CASCADE CONSTRAINTS;
DROP TABLE TBL_POST_FAQ CASCADE CONSTRAINTS;
DROP TABLE TBL_TEACHER_EMPLOYMENT CASCADE CONSTRAINTS;
DROP TABLE TBL_POST_CATEGORY CASCADE CONSTRAINTS;
DROP TABLE TBL_POST_QUESTION CASCADE CONSTRAINTS;
DROP TABLE TBL_POST_COMPLAIN CASCADE CONSTRAINTS;
DROP TABLE TBL_POST_ADMIRE CASCADE CONSTRAINTS;
DROP TABLE TBL_BOOK_KINDS CASCADE CONSTRAINTS;
DROP TABLE TBL_BOOK_INFO CASCADE CONSTRAINTS;
DROP TABLE TBL_BOOK_RENT CASCADE CONSTRAINTS;

-- DROP SEQUENCE
DROP SEQUENCE SEQ_MEMBER_DEAD_NO;
DROP SEQUENCE SEQ_TCR_NO;
DROP SEQUENCE SEQ_CLASS_CLS_NUM;
DROP SEQUENCE SEQ_RENT_REQUEST_NUM;
DROP SEQUENCE SEQ_REQUEST_POST_NUM;
DROP SEQUENCE SEQ_NOTICE_POST_NUM;
DROP SEQUENCE SEQ_FAQ_POST_NUM;
DROP SEQUENCE SEQ_EMPLOYMENT_POST_NUM;
DROP SEQUENCE SEQ_QUESTION_POST_NUM;
DROP SEQUENCE SEQ_COMPLAIN_POST_NUM;
DROP SEQUENCE SEQ_COMMEND_POST_NUM;
DROP SEQUENCE SEQ_BOOK_INFO_CODE;
DROP SEQUENCE SEQ_BOOK_RENT_NUM;
DROP SEQUENCE SEQ_ADMIRE_POST_NUM;

-- CREATE SEQUENCE
CREATE SEQUENCE SEQ_MEMBER_DEAD_NO NOCACHE;
CREATE SEQUENCE SEQ_TCR_NO NOCACHE;
CREATE SEQUENCE SEQ_CLASS_CLS_NUM NOCACHE;
CREATE SEQUENCE SEQ_RENT_REQUEST_NUM NOCACHE;
CREATE SEQUENCE SEQ_REQUEST_POST_NUM NOCACHE;
CREATE SEQUENCE SEQ_NOTICE_POST_NUM NOCACHE;
CREATE SEQUENCE SEQ_FAQ_POST_NUM NOCACHE;
CREATE SEQUENCE SEQ_EMPLOYMENT_POST_NUM NOCACHE;
CREATE SEQUENCE SEQ_QUESTION_POST_NUM NOCACHE;
CREATE SEQUENCE SEQ_COMPLAIN_POST_NUM NOCACHE;
CREATE SEQUENCE SEQ_COMMEND_POST_NUM NOCACHE;
CREATE SEQUENCE SEQ_BOOK_INFO_CODE NOCACHE;
CREATE SEQUENCE SEQ_BOOK_RENT_NUM NOCACHE;
CREATE SEQUENCE SEQ_ADMIRE_POST_NUM NOCACHE;

--CREATE TABLE 폐기회원 
CREATE TABLE TBL_MEMBER_DEAD (
  NO VARCHAR2(30) CONSTRAINT PK_DEAD_NO PRIMARY KEY
, PHONE1 VARCHAR2(30) CONSTRAINT NN_DEAD_PHONE1 NOT NULL
, PHONE2 VARCHAR2(30) CONSTRAINT NN_DEAD_PHONE2 NOT NULL
, PHONE3 VARCHAR2(30) CONSTRAINT NN_DEAD_PHONE3 NOT NULL
, EMAIL1 VARCHAR2(50) CONSTRAINT NN_DEAD_EMAIL1 NOT NULL
, EMAIL2 VARCHAR2(50) CONSTRAINT NN_DEAD_EMAIL2 NOT NULL
, ADDRESS1 VARCHAR2(300) CONSTRAINT NN_DEAD_ADDRESS1 NOT NULL
, ADDRESS2 VARCHAR2(300) CONSTRAINT NN_DEAD_ADDRESS2 NOT NULL
, ADDRESS3 VARCHAR2(300) CONSTRAINT NN_DEAD_ADDRESS3 NOT NULL
, ID VARCHAR2(30) CONSTRAINT NN_DEAD_ID NOT NULL
, PWD VARCHAR2(100) CONSTRAINT NN_DEAD_PWD NOT NULL
, BIRTH DATE CONSTRAINT NN_DEAD_BIRTH NOT NULL
, NAME VARCHAR2(30) CONSTRAINT NN_DEAD_NAME NOT NULL
, GENDER VARCHAR2(3) CONSTRAINT NN_DEAD_GENDER NOT NULL
, CONSTRAINT CK_DEAD_GENDER CHECK(GENDER IN ('M','W'))
);

COMMENT ON COLUMN TBL_MEMBER_DEAD.NO IS '회원 코드';
COMMENT ON COLUMN TBL_MEMBER_DEAD.PHONE1 IS '연락처1';
COMMENT ON COLUMN TBL_MEMBER_DEAD.PHONE2 IS '연락처2';
COMMENT ON COLUMN TBL_MEMBER_DEAD.PHONE3 IS '연락처3';
COMMENT ON COLUMN TBL_MEMBER_DEAD.EMAIL1 IS '이메일1';
COMMENT ON COLUMN TBL_MEMBER_DEAD.EMAIL2 IS '이메일2';
COMMENT ON COLUMN TBL_MEMBER_DEAD.ADDRESS1 IS '주소1';
COMMENT ON COLUMN TBL_MEMBER_DEAD.ADDRESS2 IS '주소2';
COMMENT ON COLUMN TBL_MEMBER_DEAD.ADDRESS3 IS '주소3';
COMMENT ON COLUMN TBL_MEMBER_DEAD.ID IS '회원 ID';
COMMENT ON COLUMN TBL_MEMBER_DEAD.PWD IS '비밀번호';
COMMENT ON COLUMN TBL_MEMBER_DEAD.BIRTH IS '생년월일';
COMMENT ON COLUMN TBL_MEMBER_DEAD.NAME IS '이름';
COMMENT ON COLUMN TBL_MEMBER_DEAD.GENDER IS '성별';

-- CREATE TABLE 아이디 찾기 질문
CREATE TABLE TBL_MEMBER_QUESTION (
  ID_QUE_NUM NUMBER
, ID_QUE VARCHAR2(300) CONSTRAINT NN_QUESTION_QUE NOT NULL
, CONSTRAINT PK_ID_QUE_NUM PRIMARY KEY(ID_QUE_NUM)
, CONSTRAINT CK_ID_QUE_NUM CHECK(ID_QUE_NUM IN (1,2,3,4,5,6))
, CONSTRAINT CK_ID_QUE CHECK(ID_QUE IN ('출신 고등학교', '가장 친한 친구 이름','가장 존경하는 인물','별명','고향','좋아하는 색'))
);

COMMENT ON COLUMN TBL_MEMBER_QUESTION.ID_QUE_NUM IS '아이디 질문 번호';
COMMENT ON COLUMN TBL_MEMBER_QUESTION.ID_QUE IS '아이디 질문';

-- CREATE TABLE 활동 회원
CREATE TABLE TBL_MEMBER_ALIVE (
  ID VARCHAR2(30) CONSTRAINT PK_ALIVE_ID PRIMARY KEY 
, ID_QUE_NUM NUMBER CONSTRAINT NN_ALIVE_QUE_NUM NOT NULL
, PHONE1 VARCHAR2(30) CONSTRAINT NN_ALIVE_PHONE1 NOT NULL
, PHONE2 VARCHAR2(30) CONSTRAINT NN_ALIVE_PHONE2 NOT NULL
, PHONE3 VARCHAR2(30) CONSTRAINT NN_ALIVE_PHONE3 NOT NULL
, EMAIL1 VARCHAR2(50) CONSTRAINT NN_ALIVE_EMAIL1 NOT NULL
, EMAIL2 VARCHAR2(50) CONSTRAINT NN_ALIVE_EMAIL2 NOT NULL
, ADDRESS1 VARCHAR2(300) CONSTRAINT NN_ALIVE_ADDRESS1 NOT NULL
, ADDRESS2 VARCHAR2(300) CONSTRAINT NN_ALIVE_ADDRESS2 NOT NULL
, ADDRESS3 VARCHAR2(300) CONSTRAINT NN_ALIVE_ADDRESS3 NOT NULL
, PWD VARCHAR2(100) CONSTRAINT NN_ALIVE_PWD NOT NULL
, NAME VARCHAR2(30) CONSTRAINT NN_ALIVE_NAME NOT NULL
, BIRTH DATE CONSTRAINT NN_ALIVE_BIRTH NOT NULL
, ID_ANSWER VARCHAR2(100) CONSTRAINT NN_ALIVE_ID_ANSWER NOT NULL
, GENDER VARCHAR2(3) CONSTRAINT NN_ALIVE_GENDER NOT NULL
, LAST_LOGIN DATE 
, USER_STATUS VARCHAR2(3) CONSTRAINT NN_USER_STATUS NOT NULL
, OUT_DATE DATE 
, ENROLL_DATE DATE DEFAULT SYSDATE CONSTRAINT NN_USER_ENROLLDATE NOT NULL
, CONSTRAINT FK_ALIVE_ID_QUE_NUM FOREIGN KEY(ID_QUE_NUM) REFERENCES TBL_MEMBER_QUESTION(ID_QUE_NUM)
, CONSTRAINT CK_ALIVE_ID_QUE_NUM CHECK(ID_QUE_NUM IN (1,2,3,4,5,6))
, CONSTRAINT CK_ALIVE_GENDER CHECK(GENDER IN ('M','W'))
, CONSTRAINT CK_USER_STATUS CHECK(USER_STATUS IN('A', 'O', 'R'))
);

COMMENT ON COLUMN TBL_MEMBER_ALIVE.ID IS '회원 ID';
COMMENT ON COLUMN TBL_MEMBER_ALIVE.ID_QUE_NUM IS '아이디 질문 번호';
COMMENT ON COLUMN TBL_MEMBER_ALIVE.PHONE1 IS '연락처1';
COMMENT ON COLUMN TBL_MEMBER_ALIVE.PHONE2 IS '연락처2';
COMMENT ON COLUMN TBL_MEMBER_ALIVE.PHONE3 IS '연락처3';
COMMENT ON COLUMN TBL_MEMBER_ALIVE.EMAIL1 IS '이메일1';
COMMENT ON COLUMN TBL_MEMBER_ALIVE.EMAIL2 IS '이메일2';
COMMENT ON COLUMN TBL_MEMBER_ALIVE.ADDRESS1 IS '주소1';
COMMENT ON COLUMN TBL_MEMBER_ALIVE.ADDRESS2 IS '주소2';
COMMENT ON COLUMN TBL_MEMBER_ALIVE.ADDRESS3 IS '주소3';
COMMENT ON COLUMN TBL_MEMBER_ALIVE.PWD IS '비밀번호';
COMMENT ON COLUMN TBL_MEMBER_ALIVE.NAME IS '이름';
COMMENT ON COLUMN TBL_MEMBER_ALIVE.BIRTH IS '생년월일';
COMMENT ON COLUMN TBL_MEMBER_ALIVE.ID_ANSWER IS '아이디 질문 답변';
COMMENT ON COLUMN TBL_MEMBER_ALIVE.GENDER IS '성별';
COMMENT ON COLUMN TBL_MEMBER_ALIVE.LAST_LOGIN IS '마지막 로그인 시기';
COMMENT ON COLUMN TBL_MEMBER_ALIVE.USER_STATUS IS '유저 상태';
COMMENT ON COLUMN TBL_MEMBER_ALIVE.OUT_DATE IS '탈퇴시기';
COMMENT ON COLUMN TBL_MEMBER_ALIVE.ENROLL_DATE IS '가입시기';

-- CREATE TABLE 매니저
CREATE TABLE TBL_MANAGER (
  MANAGER_ID VARCHAR2(30) CONSTRAINT PK_MANAGER_ID PRIMARY KEY 
, PWD VARCHAR2(100) CONSTRAINT NN_MANAGER_PWD NOT NULL
, MANAGER_NAME VARCHAR2(30) CONSTRAINT NN_MANAGER_NAME NOT NULL
);

COMMENT ON COLUMN TBL_MANAGER.MANAGER_ID IS '관리자ID';
COMMENT ON COLUMN TBL_MANAGER.PWD IS '비밀번호';
COMMENT ON COLUMN TBL_MANAGER.MANAGER_NAME IS '이름';

-- CREATE TABLE 센터 카테고리
CREATE TABLE TBL_CENTER_KINDS (
  CEN_KINDS_NAME VARCHAR2(30) CONSTRAINT PK_CEN_NAME PRIMARY KEY 
, CONSTRAINT CK_CEN_KINDS_NAME CHECK(CEN_KINDS_NAME IN ('수영장','탁구장','배드민턴장','클라이밍','강의실','농구장','소회의실','대강당'))
);

COMMENT ON COLUMN TBL_CENTER_KINDS.CEN_KINDS_NAME IS '시설 종류 이름';

-- CREATE TABLE 센터 관리
CREATE TABLE TBL_CENTER_MANAGEMENT (
  CEN_NAME VARCHAR2(30) CONSTRAINT PK_CEN_MANAGE_NAME PRIMARY KEY 
, CEN_KINDS_NAME VARCHAR2(30) CONSTRAINT NN_MANAGEMENT_KINDS_NAME NOT NULL
, CEN_USE_YN VARCHAR2(3) DEFAULT 'Y' CONSTRAINT NN_MANAGEMENT_USE_YN NOT NULL
, CEN_CAPACITY NUMBER CONSTRAINT NN_MANAGEMENT_CAPACITY NOT NULL
, CONSTRAINT FK_CEN_KINDS_NAME FOREIGN KEY(CEN_KINDS_NAME) REFERENCES TBL_CENTER_KINDS(CEN_KINDS_NAME)
, CONSTRAINT CK_CEN_MANAGE_KINDS_NAME CHECK(CEN_KINDS_NAME IN ('수영장','탁구장','배드민턴장','클라이밍','강의실','농구장','소회의실','대강당'))
, CONSTRAINT CK_USE_YN CHECK(CEN_USE_YN IN ('Y','N'))
, CONSTRAINT CK_CEN_NAME CHECK(CEN_NAME IN ('201','301','302','303','304','305','306','307','308','309','310','401','402','403','404'))
);

COMMENT ON COLUMN TBL_CENTER_MANAGEMENT.CEN_NAME IS '시설이름';
COMMENT ON COLUMN TBL_CENTER_MANAGEMENT.CEN_KINDS_NAME IS '시설 종류 이름';
COMMENT ON COLUMN TBL_CENTER_MANAGEMENT.CEN_USE_YN IS '시설 사용 가능 여부';
COMMENT ON COLUMN TBL_CENTER_MANAGEMENT.CEN_CAPACITY IS '시설 수용 인원';

-- CREATE TABLE 강사
CREATE TABLE TBL_TEACHER (
  TCR_NO VARCHAR2(30) CONSTRAINT PK_TCR_NO PRIMARY KEY
, TCR_NAME VARCHAR2(30) CONSTRAINT NN_TEACHER_NAME NOT NULL
, TCR_GENDER VARCHAR2(3) CONSTRAINT NN_TCR_GENDER NOT NULL 
, TCR_BIRTH DATE CONSTRAINT NN_TEACHER_BIRTH NOT NULL
, TCR_EMAIL VARCHAR2(50) CONSTRAINT NN_TEACHER_EMAIL NOT NULL
, TCR_PHONE VARCHAR2(30) CONSTRAINT NN_TEACHER_PHONE NOT NULL
, TCR_ADDRESS VARCHAR2(300) CONSTRAINT NN_TEACHER_ADDRESS NOT NULL
, TCR_CONTRACT_YN VARCHAR2(3) DEFAULT 'N' CONSTRAINT NN_TEACHER_CONTRACT_YN NOT NULL
, CONSTRAINT UK_TCR_PHONE UNIQUE(TCR_PHONE)
, CONSTRAINT UK_TCR_EMAIL UNIQUE(TCR_EMAIL)
, CONSTRAINT CK_TCR_CONTRACT_YN CHECK(TCR_CONTRACT_YN IN ('Y','N'))
, CONSTRAINT CK_TCR_GENDER CHECK(TCR_GENDER IN ('M','W'))
);

COMMENT ON COLUMN TBL_TEACHER.TCR_NO IS '강사 코드';
COMMENT ON COLUMN TBL_TEACHER.TCR_NAME IS '이름';
COMMENT ON COLUMN TBL_TEACHER.TCR_BIRTH IS '생년월일';
COMMENT ON COLUMN TBL_TEACHER.TCR_EMAIL IS '이메일';
COMMENT ON COLUMN TBL_TEACHER.TCR_PHONE IS '연락처';
COMMENT ON COLUMN TBL_TEACHER.TCR_ADDRESS IS '주소';
COMMENT ON COLUMN TBL_TEACHER.TCR_CONTRACT_YN IS '계약해지여부';
COMMENT ON COLUMN TBL_TEACHER.TCR_GENDER IS '강사성별';

-- CREATE TABLE 강사 이력
CREATE TABLE TBL_TEACHER_RESUME (
  TCR_NO VARCHAR2(30) CONSTRAINT PK_TCR_RESUME_NO PRIMARY KEY
, TCR_RESUME VARCHAR2(4000) CONSTRAINT NN_RESUME NOT NULL
, CONSTRAINT FK_RESUME_TCR_NO FOREIGN KEY(TCR_NO) REFERENCES TBL_TEACHER(TCR_NO)
);

COMMENT ON COLUMN TBL_TEACHER_RESUME.TCR_NO IS '강사 코드';
COMMENT ON COLUMN TBL_TEACHER_RESUME.TCR_RESUME IS '강사 이력';

-- CREATE TABLE 강좌
CREATE TABLE TBL_CLASS (
  CLS_NUM NUMBER CONSTRAINT PK_CLS_NUM PRIMARY KEY
, TCR_NO VARCHAR2(30) CONSTRAINT NN_CLAS_NO NOT NULL
, CEN_NAME VARCHAR2(30) CONSTRAINT NN_CLS_CEN_NAME NOT NULL
, CLS_NAME VARCHAR2(50) CONSTRAINT NN_CLS_NAME NOT NULL
, CLS_APPLY_CNT NUMBER DEFAULT 0 CONSTRAINT NN_CLS_APPLY_CNT NOT NULL
, CLS_MAX_CNT NUMBER CONSTRAINT NN_CLS_MAX_CNT NOT NULL
, CLS_START_DAY DATE CONSTRAINT NN_CLS_START_DAY NOT NULL
, CLS_END_DAY DATE CONSTRAINT NN_CLS_END_DAY NOT NULL
, CLS_EXPLAIN VARCHAR2(4000) CONSTRAINT NN_CLASS_EXPLAIN NOT NULL
, CLS_TIME NUMBER CONSTRAINT NN_CLASS_TIME NOT NULL
, CLS_COST NUMBER CONSTRAINT NN_CLASS_COST NOT NULL
, CLS_DAY VARCHAR2(20) CONSTRAINT NN_CLASS_DAY NOT NULL
, CLS_START_YN VARCHAR2(3) DEFAULT 'N' CONSTRAINT NN_CLASS_START_YN NOT NULL
, CLS_CATEGORY_NAME VARCHAR2(15) CONSTRAINT NN_CATEGORY_CLASS_NAME NOT NULL
, CLS_RECO_AGE VARCHAR2(30) CONSTRAINT NN_CATEGORY_OF_RECO_AGE NOT NULL
, CLS_RUN_TIME VARCHAR2(100) CONSTRAINT NN_CLS_TIME NOT NULL
, CONSTRAINT FK_CLS_TCR_NO FOREIGN KEY(TCR_NO) REFERENCES TBL_TEACHER(TCR_NO)
, CONSTRAINT FK_CLS_CEN_NAME FOREIGN KEY(CEN_NAME) REFERENCES TBL_CENTER_MANAGEMENT(CEN_NAME)
, CONSTRAINT CK_CLS_START_YN CHECK(CLS_START_YN IN ('Y','N'))
, CONSTRAINT CK_CLS_OF_CATE_NAME CHECK(CLS_CATEGORY_NAME IN ('문화','체육'))
, CONSTRAINT CK_CLS_OF_RECO_AGE CHECK(CLS_RECO_AGE IN ('아동','청소년','성인','시니어','전체'))
);

COMMENT ON COLUMN TBL_CLASS.CLS_NUM IS '강좌 고유번호';
COMMENT ON COLUMN TBL_CLASS.TCR_NO IS '강사코드';
COMMENT ON COLUMN TBL_CLASS.CEN_NAME IS '시설이름';
COMMENT ON COLUMN TBL_CLASS.CLS_NAME IS '강좌명';
COMMENT ON COLUMN TBL_CLASS.CLS_APPLY_CNT IS '신청인원';
COMMENT ON COLUMN TBL_CLASS.CLS_MAX_CNT IS '최대 수강인원';
COMMENT ON COLUMN TBL_CLASS.CLS_START_DAY IS '개강일';
COMMENT ON COLUMN TBL_CLASS.CLS_END_DAY IS '종강일';
COMMENT ON COLUMN TBL_CLASS.CLS_EXPLAIN IS '강좌 설명';
COMMENT ON COLUMN TBL_CLASS.CLS_TIME IS '진행시간';
COMMENT ON COLUMN TBL_CLASS.CLS_COST IS '수강료';
COMMENT ON COLUMN TBL_CLASS.CLS_DAY IS '요일';
COMMENT ON COLUMN TBL_CLASS.CLS_START_YN IS '개강 여부';
COMMENT ON COLUMN TBL_CLASS.CLS_CATEGORY_NAME IS '카테고리명';
COMMENT ON COLUMN TBL_CLASS.CLS_RECO_AGE IS '추천연령';

-- CREATE TABLE 강좌 결제
CREATE TABLE TBL_CLASS_PAYMENT 
(
  ID VARCHAR2(30)
, CLS_NUM NUMBER CONSTRAINT NN_CLS_NUM NOT NULL
, CLS_PRICE NUMBER CONSTRAINT NN_CLS_PRICE NOT NULL
, CLS_PAY_DAY DATE CONSTRAINT NN_CLS_PAY_DAY NOT NULL
, CLS_PAY_YN VARCHAR2(3) DEFAULT 'N' CONSTRAINT NN_CLS_PAY_YN NOT NULL
, CLS_PAY_TYPE VARCHAR2(20) CONSTRAINT NN_CLS_PAY_TYPE NOT NULL
, CONSTRAINT FK_CLS_ID FOREIGN KEY (ID) 
                       REFERENCES TBL_MEMBER_ALIVE (ID) ON DELETE CASCADE
, CONSTRAINT FK_CLS_NUM FOREIGN KEY (CLS_NUM)
                        REFERENCES TBL_CLASS (CLS_NUM)
, CONSTRAINT CK_CLS_PAY_YN CHECK(CLS_PAY_YN IN ('Y', 'N'))                          
);

COMMENT ON COLUMN TBL_CLASS_PAYMENT.ID IS '회원ID'; 
COMMENT ON COLUMN TBL_CLASS_PAYMENT.CLS_NUM IS '강좌 고유번호';
COMMENT ON COLUMN TBL_CLASS_PAYMENT.CLS_PRICE IS '결제 가격';
COMMENT ON COLUMN TBL_CLASS_PAYMENT.CLS_PAY_DAY IS '결제일';
COMMENT ON COLUMN TBL_CLASS_PAYMENT.CLS_PAY_YN IS '결제여부';
COMMENT ON COLUMN TBL_CLASS_PAYMENT.CLS_PAY_TYPE IS '결제방식';

-- CREATE TABLE 수강회원목록
CREATE TABLE TBL_CLASS_MEMBER
(
  ID VARCHAR2(30) 
, CLS_NUM NUMBER
, REFUND_YN VARCHAR2(3) DEFAULT 'N' CONSTRAINT NN_REFUND_YN NOT NULL
, CONSTRAINT FK_CLASS_MEMBER_ID FOREIGN KEY (ID)
                   REFERENCES TBL_MEMBER_ALIVE (ID) ON DELETE CASCADE
, CONSTRAINT FK_CLASS_MEMBER_CLS_NUM FOREIGN KEY (CLS_NUM)
                        REFERENCES TBL_CLASS(CLS_NUM)
, CONSTRAINT CK_REFUND_YN CHECK(REFUND_YN IN ('Y', 'N'))
);

COMMENT ON COLUMN TBL_CLASS_MEMBER.ID IS '회원ID';
COMMENT ON COLUMN TBL_CLASS_MEMBER.CLS_NUM IS '강좌고유번호';
COMMENT ON COLUMN TBL_CLASS_MEMBER.REFUND_YN IS '환불여부';

-- CREATE TABLE 대관 문의
CREATE TABLE TBL_RENT_REQUEST
(
  POST_NUM NUMBER CONSTRAINT PK_POST_NUM PRIMARY KEY
, CENTER_NAME VARCHAR2(30) CONSTRAINT NN_REQUEST_CENTER_NAME NOT NULL
, MANAGER_ID VARCHAR2(30)
, MEM_ID VARCHAR2(30) CONSTRAINT NN_RENT_REQUEST_MEM_ID NOT NULL
, RENT_REQ_YN VARCHAR2(3) DEFAULT 'N' CONSTRAINT NN_RENT_REQ_YN NOT NULL
, RENT_COST NUMBER 
, RENT_PAY_YN VARCHAR2(3) DEFAULT 'N' CONSTRAINT NN_RENT_PAY_YN NOT NULL
, RENT_REF_YN VARCHAR2(3) DEFAULT 'N' CONSTRAINT NN_RENT_REF_YN NOT NULL
, RENT_START DATE CONSTRAINT NN_RENT_START NOT NULL
, RENT_END DATE CONSTRAINT NN_RENT_ENT NOT NULL
, CONSTRAINT FK_RENT_REQUEST_CENTER_NAME FOREIGN KEY (CENTER_NAME)
                            REFERENCES TBL_CENTER_MANAGEMENT (CEN_NAME)
, CONSTRAINT FK_RENT_REQUEST_MANAGER_ID FOREIGN KEY (MANAGER_ID)
                           REFERENCES TBL_MANAGER (MANAGER_ID) 
, CONSTRAINT FK_RENT_REQUEST_MEM_ID FOREIGN KEY (MEM_ID)
                       REFERENCES TBL_MEMBER_ALIVE (ID) ON DELETE CASCADE
, CONSTRAINT CK_RENT_REQ_YN CHECK(RENT_REQ_YN IN ('Y', 'N'))
, CONSTRAINT CK_RENT_PAY_YN CHECK(RENT_PAY_YN IN ('Y', 'N'))
, CONSTRAINT CK_RENT_REF_YN CHECK(RENT_REF_YN IN ('Y', 'N'))
);

COMMENT ON COLUMN TBL_RENT_REQUEST.POST_NUM IS '게시글 번호';
COMMENT ON COLUMN TBL_RENT_REQUEST.CENTER_NAME IS '시설 이름';
COMMENT ON COLUMN TBL_RENT_REQUEST.MANAGER_ID IS '관리자 아이디';
COMMENT ON COLUMN TBL_RENT_REQUEST.MEM_ID IS '회원ID';
COMMENT ON COLUMN TBL_RENT_REQUEST.RENT_REQ_YN IS '대관 요청 승인여부';
COMMENT ON COLUMN TBL_RENT_REQUEST.RENT_COST IS '대관 비용';
COMMENT ON COLUMN TBL_RENT_REQUEST.RENT_PAY_YN IS '대관 결제 여부';
COMMENT ON COLUMN TBL_RENT_REQUEST.RENT_REF_YN IS '환불 여부';
COMMENT ON COLUMN TBL_RENT_REQUEST.RENT_START IS '대관 시작일';
COMMENT ON COLUMN TBL_RENT_REQUEST.RENT_END IS '대관 종료일';

-- CREATE TABLE 강좌 카테고리
CREATE TABLE TBL_POST_CATEGORY
(
  CATE_NUM NUMBER CONSTRAINT PK_POST_CATE_NUM PRIMARY KEY
, CATE_KIND VARCHAR2(30) CONSTRAINT NN_POST_CATE_KIN NOT NULL   
, CONSTRAINT CK_CATE_KIND CHECK (CATE_KIND IN ('문화 강좌', '체육 강좌', '시설', '직원', '기타'))
);

COMMENT ON COLUMN TBL_POST_CATEGORY.CATE_NUM IS '카테고리 번호';
COMMENT ON COLUMN TBL_POST_CATEGORY.CATE_KIND IS '카테고리 종류';

-- CREATE TABLE 공지사항
CREATE TABLE TBL_POST_NOTICE
(
  NUM NUMBER CONSTRAINT PK_NOTICE_NUM PRIMARY KEY
, MANAGER_ID VARCHAR2(30) CONSTRAINT NN_NOTICE_MANAGER_ID NOT NULL
, CATE_NUM NUMBER CONSTRAINT NN_NOTICE_CATE_NUM NOT NULL
, POST_DATE DATE DEFAULT SYSDATE CONSTRAINT NN_NOTICE_DATE NOT NULL
, TITLE VARCHAR2(1000) CONSTRAINT NN_NOTICE_TITLE NOT NULL
, CONTENT VARCHAR2(4000) CONSTRAINT NN_NOTICE_CONTENT NOT NULL
, HITS NUMBER DEFAULT 0 CONSTRAINT NN_NOTICE_HITS NOT NULL
, UPLOAD_FILE_KEY VARCHAR2(100) 
, CONSTRAINT FK_NOTICE_MANAGER_ID FOREIGN KEY (MANAGER_ID)
                           REFERENCES TBL_MANAGER (MANAGER_ID) 
, CONSTRAINT FK_NOTICE_CATE_NUM FOREIGN KEY (CATE_NUM)
                                  REFERENCES TBL_POST_CATEGORY (CATE_NUM)
);

COMMENT ON COLUMN TBL_POST_NOTICE.NUM IS '글번호';
COMMENT ON COLUMN TBL_POST_NOTICE.MANAGER_ID IS '관리자 아이디';
COMMENT ON COLUMN TBL_POST_NOTICE.CATE_NUM IS '카테고리 번호';
COMMENT ON COLUMN TBL_POST_NOTICE.POST_DATE IS '날짜';
COMMENT ON COLUMN TBL_POST_NOTICE.TITLE IS '글제목';
COMMENT ON COLUMN TBL_POST_NOTICE.CONTENT IS '글내용';
COMMENT ON COLUMN TBL_POST_NOTICE.HITS IS '조회수';
COMMENT ON COLUMN TBL_POST_NOTICE.UPLOAD_FILE_KEY IS '파일 업로드 키값';

-- CREATE TABLE FAQ
CREATE TABLE TBL_POST_FAQ
(
  NUM NUMBER CONSTRAINT PK_FAQ_NUM PRIMARY KEY
, MANAGER_ID VARCHAR2(30) CONSTRAINT NN_FAQ_MANAGER_ID NOT NULL
, CATE_NUM NUMBER CONSTRAINT NN_FAQ_CATE_NUM NOT NULL
, TITLE VARCHAR2(1000) CONSTRAINT NN_FAQ_TITLE NOT NULL
, CONTENT VARCHAR2(4000) CONSTRAINT NN_FAQ_CONTENT NOT NULL
, HITS NUMBER DEFAULT 0 CONSTRAINT NN_FAQ_HITS NOT NULL
, CONSTRAINT FK_FAQ_MANAGER_ID FOREIGN KEY (MANAGER_ID)
                               REFERENCES TBL_MANAGER (MANAGER_ID)                             
, CONSTRAINT FK_FAQ_CATE_NUM FOREIGN KEY (CATE_NUM)
                                  REFERENCES TBL_POST_CATEGORY (CATE_NUM)
);

COMMENT ON COLUMN TBL_POST_FAQ.NUM IS '글번호';
COMMENT ON COLUMN TBL_POST_FAQ.MANAGER_ID IS '관리자 아이디';
COMMENT ON COLUMN TBL_POST_FAQ.CATE_NUM IS '카테고리 번호';
COMMENT ON COLUMN TBL_POST_FAQ.TITLE IS '글 제목';
COMMENT ON COLUMN TBL_POST_FAQ.CONTENT IS '글 내용';
COMMENT ON COLUMN TBL_POST_FAQ.HITS IS '조회수';

-- CREATE TABLE 강사모집
CREATE TABLE TBL_TEACHER_EMPLOYMENT
(
  NUM NUMBER CONSTRAINT PK_EMPLOYMENT_NUM PRIMARY KEY
, MANAGER_ID VARCHAR2(30) CONSTRAINT NN_EMPLOYMENT_MANAGER_ID NOT NULL
, CLS_NUM NUMBER CONSTRAINT NN_EMPLOYMENT_CLS_NUM NOT NULL
, TITLE VARCHAR2(1000) CONSTRAINT NN_EMPLOYMENT_TITLE NOT NULL
, POST_DATE DATE DEFAULT SYSDATE
, EMP_YN VARCHAR2(3) DEFAULT 'N' CONSTRAINT NN_EMP_YN NOT NULL
, EMP_CONDITION VARCHAR2(1000) CONSTRAINT NN_EMP_CONDITION NOT NULL
, EMP_NUMBER NUMBER CONSTRAINT NN_EMP_NUMBER NOT NULL
, ENVIRONMENT VARCHAR2(4000) CONSTRAINT NN_ENVIRONMENT NOT NULL
, EMP_PROCESS VARCHAR2(4000) CONSTRAINT NN_EMP_PROCESS NOT NULL
, CONSTRAINT FK_EMPLOYMENT_MANAGER_ID FOREIGN KEY (MANAGER_ID)
                                      REFERENCES TBL_MANAGER (MANAGER_ID)
, CONSTRAINT FK_EMPLOYMENT_CLS_NUM FOREIGN KEY (CLS_NUM)
                                   REFERENCES TBL_CLASS (CLS_NUM) 
, CONSTRAINT CK_EMPLOYMENT_EMP_YN CHECK (EMP_YN IN ('Y', 'N'))                                    
);

COMMENT ON COLUMN TBL_TEACHER_EMPLOYMENT.NUM IS '글번호';
COMMENT ON COLUMN TBL_TEACHER_EMPLOYMENT.MANAGER_ID IS '관리자 아이디';
COMMENT ON COLUMN TBL_TEACHER_EMPLOYMENT.CLS_NUM IS '강좌 고유번호';
COMMENT ON COLUMN TBL_TEACHER_EMPLOYMENT.TITLE IS '글 제목';
COMMENT ON COLUMN TBL_TEACHER_EMPLOYMENT.POST_DATE IS '게시일';
COMMENT ON COLUMN TBL_TEACHER_EMPLOYMENT.EMP_YN IS '모집여부';
COMMENT ON COLUMN TBL_TEACHER_EMPLOYMENT.EMP_CONDITION IS '자격요건';
COMMENT ON COLUMN TBL_TEACHER_EMPLOYMENT.EMP_NUMBER IS '모집인원';
COMMENT ON COLUMN TBL_TEACHER_EMPLOYMENT.ENVIRONMENT IS '근무환경';
COMMENT ON COLUMN TBL_TEACHER_EMPLOYMENT.EMP_PROCESS IS '채용절차';


-- CREATE TABLE QNA
CREATE TABLE TBL_POST_QUESTION
(
  NUM NUMBER CONSTRAINT PK_QUESTION_NUM PRIMARY KEY
, CATE_NUM NUMBER CONSTRAINT NN_QUESTION_CATE_NUM NOT NULL
, MEM_ID VARCHAR2(30) CONSTRAINT NN_QUESTION_MEM_ID NOT NULL
, MANAGER_ID VARCHAR2(30) 
, POST_DATE DATE DEFAULT SYSDATE CONSTRAINT NN_QUESTION_POST_DATE NOT NULL
, TITLE VARCHAR2(1000) CONSTRAINT NN_QUESTION_TITLE NOT NULL
, CONTENT VARCHAR2(4000) CONSTRAINT NN_QUESTION_CONTENT NOT NULL
, ANSWER_YN VARCHAR2(30) CONSTRAINT NN_QUESTION_ANSWER_YN NOT NULL
, ANSWER_CONTENT VARCHAR2(4000) 
, DISPLAY_YN VARCHAR2(30) CONSTRAINT NN_QUESTION_DISPLAY_YN NOT NULL
, HITS NUMBER DEFAULT 0 CONSTRAINT NN_QUESTION_HITS NOT NULL
, CONSTRAINT FK_QUESTION_CATE_NUM FOREIGN KEY (CATE_NUM)
                                  REFERENCES TBL_POST_CATEGORY (CATE_NUM)
, CONSTRAINT FK_QUESTION_MEM_ID FOREIGN KEY (MEM_ID)
                                REFERENCES TBL_MEMBER_ALIVE (ID) ON DELETE CASCADE
, CONSTRAINT FK_QUESTION_MANAGER_ID FOREIGN KEY (MANAGER_ID)
                                    REFERENCES TBL_MANAGER (MANAGER_ID)
, CONSTRAINT CK_QUESTION_ANSWER_YN CHECK (ANSWER_YN IN ('Y', 'N'))
, CONSTRAINT CK_QUESTION_DISPLAY_YN CHECK (DISPLAY_YN IN ('Y', 'N'))
);

COMMENT ON COLUMN TBL_POST_QUESTION.NUM IS '글번호';
COMMENT ON COLUMN TBL_POST_QUESTION.CATE_NUM IS '카테고리 번호';
COMMENT ON COLUMN TBL_POST_QUESTION.MEM_ID IS '회원 ID';
COMMENT ON COLUMN TBL_POST_QUESTION.MANAGER_ID IS '관리자 아이디';
COMMENT ON COLUMN TBL_POST_QUESTION.POST_DATE IS '날짜';
COMMENT ON COLUMN TBL_POST_QUESTION.TITLE IS '글 제목';
COMMENT ON COLUMN TBL_POST_QUESTION.CONTENT IS '글 내용';
COMMENT ON COLUMN TBL_POST_QUESTION.ANSWER_YN IS '답변 여부';
COMMENT ON COLUMN TBL_POST_QUESTION.ANSWER_CONTENT IS '답변 내용';
COMMENT ON COLUMN TBL_POST_QUESTION.DISPLAY_YN IS '공개 여부';
COMMENT ON COLUMN TBL_POST_QUESTION.HITS IS '조회수';

-- CREATE TABLE 민원
CREATE TABLE TBL_POST_COMPLAIN
(
  NUM NUMBER CONSTRAINT PK_COMPLAIN_NUM PRIMARY KEY
, CATE_NUM NUMBER CONSTRAINT NN_COMPLAIN_CATE_NUM NOT NULL
, MEM_ID VARCHAR2(30) CONSTRAINT NN_COMPLAIN_MEM_ID NOT NULL
, MANAGER_ID VARCHAR2(30) 
, POST_DATE DATE DEFAULT SYSDATE CONSTRAINT NN_COMPLAIN_POST_DATE NOT NULL
, TITLE VARCHAR2(1000) CONSTRAINT NN_COMPLAIN_TITLE NOT NULL
, CONTENT VARCHAR2(4000) CONSTRAINT NN_COMPLAIN_CONTENT NOT NULL
, ANSWER_YN VARCHAR2(30) CONSTRAINT NN_COMPLAIN_ANSWER_YN NOT NULL
, ANSWER_CONTENT VARCHAR2(4000) 
, DISPLAY_YN VARCHAR2(30) CONSTRAINT NN_COMPLAIN_DISPLAY_YN NOT NULL
, HITS NUMBER DEFAULT 0 CONSTRAINT NN_COMPLAIN_HITS NOT NULL
, CONSTRAINT FK_COMPLAIN_CATE_NUM FOREIGN KEY (CATE_NUM)
                                  REFERENCES TBL_POST_CATEGORY (CATE_NUM)
, CONSTRAINT FK_COMPLAIN_MEM_ID FOREIGN KEY (MEM_ID)
                                REFERENCES TBL_MEMBER_ALIVE (ID) ON DELETE CASCADE
, CONSTRAINT FK_COMPLAIN_MANAGER_ID FOREIGN KEY (MANAGER_ID)
                                    REFERENCES TBL_MANAGER (MANAGER_ID)
, CONSTRAINT CK_COMPLAIN_ANSWER_YN CHECK (ANSWER_YN IN ('Y', 'N'))
, CONSTRAINT CK_COMPLAIN_DISPLAY_YN CHECK (DISPLAY_YN IN ('Y', 'N'))
);

COMMENT ON COLUMN TBL_POST_COMPLAIN.NUM IS '글번호';
COMMENT ON COLUMN TBL_POST_COMPLAIN.CATE_NUM IS '카테고리 번호';
COMMENT ON COLUMN TBL_POST_COMPLAIN.MEM_ID IS '회원 ID';
COMMENT ON COLUMN TBL_POST_COMPLAIN.MANAGER_ID IS '관리자 아이디';
COMMENT ON COLUMN TBL_POST_COMPLAIN.POST_DATE IS '날짜';
COMMENT ON COLUMN TBL_POST_COMPLAIN.TITLE IS '글 제목';
COMMENT ON COLUMN TBL_POST_COMPLAIN.CONTENT IS '글 내용';
COMMENT ON COLUMN TBL_POST_COMPLAIN.ANSWER_YN IS '답변 여부';
COMMENT ON COLUMN TBL_POST_COMPLAIN.ANSWER_CONTENT IS '답변 내용';
COMMENT ON COLUMN TBL_POST_COMPLAIN.DISPLAY_YN IS '공개 여부';
COMMENT ON COLUMN TBL_POST_COMPLAIN.HITS IS '조회수';

-- CREATE TABLE 칭찬
CREATE TABLE TBL_POST_ADMIRE
(
  NUM NUMBER CONSTRAINT PK_COMMEND_NUM PRIMARY KEY
, CATE_NUM NUMBER CONSTRAINT NN_COMMEND_CATE_NUM NOT NULL
, MEM_ID VARCHAR2(30) CONSTRAINT NN_COMMEND_MEM_ID NOT NULL
, POST_DATE DATE DEFAULT SYSDATE
, TITLE VARCHAR2(1000) CONSTRAINT NN_COMMEND_TITLE NOT NULL
, CONTENT VARCHAR2(4000) CONSTRAINT NN_COMMEND_CONTENT NOT NULL
, DISPLAY_YN VARCHAR2(30) CONSTRAINT NN_COMMEND_DISPLAY_YN NOT NULL
, HITS NUMBER DEFAULT 0 CONSTRAINT NN_COMMEND_HITS NOT NULL
, CONSTRAINT FK_COMMEND_CATE_NUM FOREIGN KEY (CATE_NUM)
                                  REFERENCES TBL_POST_CATEGORY (CATE_NUM)
, CONSTRAINT FK_COMMEND_MEM_ID FOREIGN KEY (MEM_ID)
                                REFERENCES TBL_MEMBER_ALIVE (ID)
, CONSTRAINT CK_COMMEND_DISPLAY_YN CHECK (DISPLAY_YN IN ('Y', 'N'))
);

COMMENT ON COLUMN TBL_POST_ADMIRE.NUM IS '글번호';
COMMENT ON COLUMN TBL_POST_ADMIRE.CATE_NUM IS '카테고리 번호';
COMMENT ON COLUMN TBL_POST_ADMIRE.MEM_ID IS '회원 ID';
COMMENT ON COLUMN TBL_POST_ADMIRE.POST_DATE IS '날짜';
COMMENT ON COLUMN TBL_POST_ADMIRE.TITLE IS '글 제목';
COMMENT ON COLUMN TBL_POST_ADMIRE.CONTENT IS '글 내용';
COMMENT ON COLUMN TBL_POST_ADMIRE.DISPLAY_YN IS '공개 여부';
COMMENT ON COLUMN TBL_POST_ADMIRE.HITS IS '조회수';

-- CREATE TABLE 도서 종류
CREATE TABLE TBL_BOOK_KINDS
(
  KINDS_CODE VARCHAR2(30) CONSTRAINT PK_KINDS_CODE PRIMARY KEY
, KINDS VARCHAR2(30) CONSTRAINT NN_KINDS NOT NULL
, CONSTRAINT CK_KINDS CHECK(KINDS IN ('경제', '에세이', '자기계발', '종교', '자연과학', '예술', '취미', '어린이', '역사', '잡지'))
);

COMMENT ON COLUMN TBL_BOOK_KINDS.KINDS_CODE IS '도서 종류 코드';
COMMENT ON COLUMN TBL_BOOK_KINDS.KINDS IS '도서 종류';

-- CREATE TABLE 도서 
CREATE TABLE TBL_BOOK_INFO
(
  CODE NUMBER CONSTRAINT PK_INFO_CODE PRIMARY KEY
, KINDS_CODE VARCHAR2(30) CONSTRAINT NN_INFO_KINDS_CODE NOT NULL
, NAME VARCHAR2(50) CONSTRAINT NN_INFO_NAME NOT NULL
, WRITER VARCHAR2(30) CONSTRAINT NN_WRITER NOT NULL
, LOCATION_CODE VARCHAR2(50) CONSTRAINT NN_LOCATION_CODE NOT NULL
, ISBN VARCHAR2(50) CONSTRAINT NN_ISBN NOT NULL
, SEARCH_YN VARCHAR2(3) DEFAULT 'Y' CONSTRAINT NN_SEARCH_YN NOT NULL
, PUBLISHER VARCHAR2(50) CONSTRAINT NN_PUBLISHER NOT NULL
, CONSTRAINT FK_KINDS_CODE FOREIGN KEY(KINDS_CODE) 
                           REFERENCES TBL_BOOK_KINDS (KINDS_CODE)
, CONSTRAINT UK_ISBN UNIQUE (ISBN)
, CONSTRAINT CK_SEARCH_YN CHECK (SEARCH_YN IN ('Y', 'N'))
);

COMMENT ON COLUMN TBL_BOOK_INFO.CODE IS '도서 코드';
COMMENT ON COLUMN TBL_BOOK_INFO.KINDS_CODE IS '도서 종류 코드';
COMMENT ON COLUMN TBL_BOOK_INFO.NAME IS '제목';
COMMENT ON COLUMN TBL_BOOK_INFO.WRITER IS '작가';
COMMENT ON COLUMN TBL_BOOK_INFO.LOCATION_CODE IS '도서 위치 코드';
COMMENT ON COLUMN TBL_BOOK_INFO.ISBN IS 'ISBN(도서 고유 번호)';
COMMENT ON COLUMN TBL_BOOK_INFO.SEARCH_YN IS '검색 가능 여부';
COMMENT ON COLUMN TBL_BOOK_INFO.PUBLISHER IS '출판사';

-- CREATE TABLE 도서 대출
CREATE TABLE TBL_BOOK_RENT
(
  RENT_NUM NUMBER CONSTRAINT PK_RENT_NUM PRIMARY KEY
, CODE NUMBER CONSTRAINT NN_RENT_CODE NOT NULL
, MEM_ID VARCHAR2(30) CONSTRAINT NN_RENT_MEM_ID NOT NULL
, RENT_DATE DATE DEFAULT SYSDATE CONSTRAINT NN_RENT_DATE NOT NULL
, RETURN_DATE DATE 
, RENT_YN VARCHAR2(3) DEFAULT 'N' CONSTRAINT NN_RENT_YN NOT NULL
, CONSTRAINT FK_RENT_CODE FOREIGN KEY (CODE)
                          REFERENCES TBL_BOOK_INFO (CODE)
, CONSTRAINT FK_RENT_MEM_ID FOREIGN KEY (MEM_ID)
                            REFERENCES TBL_MEMBER_ALIVE (ID) ON DELETE CASCADE
, CONSTRAINT CK_RENT_YN CHECK (RENT_YN IN ('Y', 'N'))                            
);

COMMENT ON COLUMN TBL_BOOK_RENT.RENT_NUM IS '도서 대출 번호';
COMMENT ON COLUMN TBL_BOOK_RENT.CODE IS '도서 코드';
COMMENT ON COLUMN TBL_BOOK_RENT.MEM_ID IS '회원 ID';
COMMENT ON COLUMN TBL_BOOK_RENT.RENT_DATE IS '대출 일자';
COMMENT ON COLUMN TBL_BOOK_RENT.RETURN_DATE IS '반납 일자';
COMMENT ON COLUMN TBL_BOOK_RENT.RENT_YN IS '연체 유무';


CREATE OR REPLACE VIEW VIEW_RENT_REFUND
AS
SELECT 
       A.POST_NUM
     , B.NAME  
     , C.CEN_KINDS_NAME
     , A.RENT_COST
     , A.RENT_PAY_YN
     , A.RENT_REF_YN
     , A.RENT_START
     , A.RENT_END
  FROM TBL_RENT_REQUEST A    
  JOIN TBL_MEMBER_ALIVE B ON (A.MEM_ID = B.ID)
  JOIN TBL_CENTER_MANAGEMENT C ON (A.CENTER_NAME = C.CEN_NAME);
 
CREATE OR REPLACE VIEW VIEW_CLASS_REFUND
AS
SELECT
       A.CLS_NUM
     , E.NAME  
     , A.ID  
     , C.CLS_NAME
     , D.TCR_NAME
     , A.CLS_PRICE
     , B.REFUND_YN
     , A.CLS_PAY_DAY
 FROM TBL_CLASS_PAYMENT A 
 JOIN TBL_CLASS_MEMBER B ON (A.ID = B.ID) 
 JOIN TBL_CLASS C ON (A.CLS_NUM = C.CLS_NUM)
 JOIN TBL_TEACHER D ON (C.TCR_NO = D.TCR_NO)
 JOIN TBL_MEMBER_ALIVE E ON(A.ID = E.ID);

CREATE OR REPLACE VIEW VIEW_SELECT_ALL_CLASS
AS
SELECT
       A.CLS_NUM
     , A.TCR_NO
     , B.TCR_NAME
     , B.TCR_GENDER
     , A.CEN_NAME
     , C.CEN_KINDS_NAME
     , A.CLS_NAME
     , A.CLS_APPLY_CNT
     , A.CLS_MAX_CNT
     , A.CLS_START_DAY
     , A.CLS_END_DAY
     , A.CLS_EXPLAIN
     , A.CLS_TIME
     , A.CLS_COST
     , A.CLS_DAY
     , A.CLS_START_YN
     , A.CLS_CATEGORY_NAME
     , A.CLS_RECO_AGE
     , A.CLS_RUN_TIME
  FROM TBL_CLASS A
  LEFT OUTER JOIN TBL_TEACHER B ON (A.TCR_NO = B.TCR_NO)
  LEFT OUTER JOIN TBL_CENTER_MANAGEMENT C ON (A.CEN_NAME = C.CEN_NAME)
 ORDER BY A.CLS_NUM; 